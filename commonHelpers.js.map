{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function renderFunctions(photos) {\n  const { hits } = photos;\n  const list = document.querySelector('.photos-list');\n\n  const photoList = hits\n    .map(\n      ({ downloads, comments, views, likes, tags, webformatURL }) => `\n    <li>\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\">\n      <span>Likes ${likes}</span>\n      <span>Views ${views}</span>\n      <span>Comments ${comments}</span>\n      <span>Downloads ${downloads}</span>\n    </li>`\n    )\n    .join('');\n\n  list.innerHTML = '';\n\n  list.insertAdjacentHTML('beforeend', photoList);\n\n  const gallery = $('.photos-list a').simpleLightbox();\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { renderFunctions } from './render-functions';\n\nexport function fetchPhotos(textValue) {\n  const KEY_URL = '44930216-c8fe7065044399c3ab26c911d';\n  const URL = 'https://pixabay.com/api/';\n  const searchParams = new URLSearchParams({\n    q: textValue,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  return fetch(`${URL}?key=${KEY_URL}&${searchParams}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(res.status);\n      }\n      return res.json();\n    })\n    .then(photos => {\n      if (photos.hits.length === 0) {\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n        return;\n      }\n      console.log(photos);\n      console.log(renderFunctions(photos));\n    })\n    .catch(error => console.error(error));\n}\n","import { fetchPhotos } from './js/pixabay-api';\n\nconst elements = {\n  form: document.querySelector('.form'),\n};\n\nelements.form.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(evt) {\n  evt.preventDefault();\n\n  const data = {};\n  new FormData(evt.target).forEach((value, key) => {\n    return (data[key] = value.trim().toLowerCase());\n  });\n\n  if (!data.textValue) {\n    alert('it is empty');\n    return;\n  }\n\n  fetchPhotos(data.textValue);\n\n  evt.currentTarget.reset();\n}\n"],"names":["renderFunctions","photos","hits","list","photoList","downloads","comments","views","likes","tags","webformatURL","fetchPhotos","textValue","KEY_URL","URL","searchParams","res","iziToast","error","elements","handlerSearch","evt","data","value","key"],"mappings":"svBAGO,SAASA,EAAgBC,EAAQ,CACtC,KAAM,CAAE,KAAAC,CAAM,EAAGD,EACXE,EAAO,SAAS,cAAc,cAAc,EAE5CC,EAAYF,EACf,IACC,CAAC,CAAE,UAAAG,EAAW,SAAAC,EAAU,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,aAAAC,CAAY,IAAO;AAAA;AAAA,kBAEnDA,CAAY,UAAUD,CAAI;AAAA,oBACxBD,CAAK;AAAA,oBACLD,CAAK;AAAA,uBACFD,CAAQ;AAAA,wBACPD,CAAS;AAAA,UAE5B,EACA,KAAK,EAAE,EAEVF,EAAK,UAAY,GAEjBA,EAAK,mBAAmB,YAAaC,CAAS,EAE9B,EAAE,gBAAgB,EAAE,eAAiB,CACvD,CCrBO,SAASO,EAAYC,EAAW,CACrC,MAAMC,EAAU,qCACVC,EAAM,2BACNC,EAAe,IAAI,gBAAgB,CACvC,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EAED,OAAO,MAAM,GAAGE,CAAG,QAAQD,CAAO,IAAIE,CAAY,EAAE,EACjD,KAAKC,GAAO,CACX,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACjB,CAAK,EACA,KAAKf,GAAU,CACd,GAAIA,EAAO,KAAK,SAAW,EAAG,CAC5BgB,EAAS,MAAM,CACb,MAAO,QACP,QACE,0EACZ,CAAS,EACD,MACD,CACD,QAAQ,IAAIhB,CAAM,EAClB,QAAQ,IAAID,EAAgBC,CAAM,CAAC,CACzC,CAAK,EACA,MAAMiB,GAAS,QAAQ,MAAMA,CAAK,CAAC,CACxC,CChCA,MAAMC,EAAW,CACf,KAAM,SAAS,cAAc,OAAO,CACtC,EAEAA,EAAS,KAAK,iBAAiB,SAAUC,CAAa,EAEtD,SAASA,EAAcC,EAAK,CAC1BA,EAAI,eAAc,EAElB,MAAMC,EAAO,CAAA,EAKb,GAJA,IAAI,SAASD,EAAI,MAAM,EAAE,QAAQ,CAACE,EAAOC,IAC/BF,EAAKE,CAAG,EAAID,EAAM,KAAI,EAAG,aAClC,EAEG,CAACD,EAAK,UAAW,CACnB,MAAM,aAAa,EACnB,MACD,CAEDX,EAAYW,EAAK,SAAS,EAE1BD,EAAI,cAAc,OACpB"}